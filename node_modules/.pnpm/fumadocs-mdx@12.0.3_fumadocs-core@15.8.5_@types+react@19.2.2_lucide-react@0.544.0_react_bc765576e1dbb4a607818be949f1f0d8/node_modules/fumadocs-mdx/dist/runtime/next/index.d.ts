import { F as FileInfo } from '../../shared-CfiiRctw.js';
import { PageData, MetaData, Source, VirtualFile } from 'fumadocs-core/source';
import { a as Runtime } from '../../types-TeHjsmja.js';
export { c as AsyncDocOut, A as AsyncRuntimeFile, D as DocOut, M as MetaOut, R as RuntimeAsync, b as RuntimeFile } from '../../types-TeHjsmja.js';
import '../../define-DJbJduHy.js';
import 'fumadocs-core/mdx-plugins';
import 'fumadocs-core/server';
import 'react';
import 'mdx/types';
import '@standard-schema/spec';
import '@mdx-js/mdx';
import 'unified';
import 'zod';

declare const _runtime: Runtime;
interface AnyCollectionEntry {
    info: FileInfo;
}
declare function createMDXSource<Doc extends PageData & AnyCollectionEntry, Meta extends MetaData & AnyCollectionEntry>(docs: Doc[], meta?: Meta[]): Source<{
    pageData: Doc;
    metaData: Meta;
}>;
interface ResolveOptions {
    docs: AnyCollectionEntry[];
    meta: AnyCollectionEntry[];
    rootDir?: string;
}
declare function resolveFiles({ docs, meta }: ResolveOptions): VirtualFile[];

export { type AnyCollectionEntry, Runtime, _runtime, createMDXSource, resolveFiles };
