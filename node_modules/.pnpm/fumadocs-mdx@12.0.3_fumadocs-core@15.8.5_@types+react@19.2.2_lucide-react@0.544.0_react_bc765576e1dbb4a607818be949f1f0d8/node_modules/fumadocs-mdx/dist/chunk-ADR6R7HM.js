// src/next/map/file-cache.ts
import { LRUCache } from "lru-cache";
import fs from "fs/promises";
import path from "path";
var map = new LRUCache({
  max: 100
});
function toFullPath(file) {
  if (path.isAbsolute(file)) {
    return path.relative(process.cwd(), file);
  }
  return file;
}
async function readFileWithCache(file) {
  const fullPath = toFullPath(file);
  const cached = map.get(fullPath);
  if (cached) return cached;
  const read = fs.readFile(fullPath).then((s) => s.toString());
  map.set(fullPath, read);
  return read;
}
function removeFileCache(file) {
  map.delete(toFullPath(file));
}

export {
  readFileWithCache,
  removeFileCache
};
